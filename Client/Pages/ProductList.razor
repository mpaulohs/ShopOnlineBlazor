@page "/products"
@using Client.Components
@inject IRepository<Product,Guid> Repository

<PageTitle>Products</PageTitle>

<div class="row">
    <div class="col-md-10">
        @*Place for search and sort*@
    </div>
    <div class="col-md-2">
        <a href="/createProduct">Create Product</a>
    </div>
</div>
<div class="row">
    <div class="col">
        <ProductTable Products="Products"/>
    </div>
</div>
<div class="row">
    <div class="col">
        @*Place for pagination*@
    </div>
</div>

@code {
    public IEnumerable<Product>? Products { get; set; } = new List<Product>();

    public PaginationMetaData MetaData { get; set; } = new PaginationMetaData();

    private PaginationParameters paginationParameters = new PaginationParameters();

    protected async override Task OnInitializedAsync()
    {
        var paginatioList = await Repository.GetByFiltersAsync(paginationParameters);
        Products = paginatioList.Entities;
        MetaData = paginatioList.MetaData;
        foreach (var item in Products)
        {
            Console.WriteLine(item.Name);
        }
    }
}
