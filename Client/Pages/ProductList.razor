@page "/products"
@using Client.Components
@using SharedLib.Services.Request.Search
@inject IRepository<Product,Guid> Repository

<PageTitle>Products</PageTitle>

<div class="row">
    <div class="col-md-10">
        <Search OnSearchChanged=SearchChanged></Search>
    </div>
    <div class="col-md-2">
        <a href="/createProduct">Create Product</a>
    </div>
</div>
<div class="row">
    <div class="col">
        <ProductTable Products="Enteties" />
    </div>
</div>
<div class="row">
    <div class="col">
        <Pagination MetaData="MetaData" SelectedPage="SelectedPage" Spread="2"></Pagination>
    </div>
</div>

@code {
    public IEnumerable<Product>? Enteties { get; set; } = new List<Product>();

    public PaginationMetaData MetaData { get; set; } = new PaginationMetaData();

    private PaginationParameters paginationParameters = new PaginationParameters();

    private SearchParameters searchParameters = new SearchParameters();

    protected async override Task OnInitializedAsync()
    {
        await GetProducts();
    }

    private async Task SelectedPage(int page)
    {
        paginationParameters.PageNumber = page;
        await GetProducts();
    }

    private async Task SearchChanged(string searchTerm)
    {
        //Console.WriteLine(searchTerm);
        paginationParameters.PageNumber = 1;
        searchParameters.SearchTerm = searchTerm;
        await GetProducts();
    }

    private async Task GetProducts()
    {
        var paginatioList = await Repository.GetByFiltersAsync(paginationParameters, searchParameters);
        Enteties = paginatioList.Entities;
        MetaData = paginatioList.MetaData;
    }
}
