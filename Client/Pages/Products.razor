@page "/products"
@inject IRepository<Product,Guid> Repository

<div class="row">
    <div class="col-md-10">
        @*Place for search and sort*@
    </div>
    <div class="col-md-2">
        <a href="/createProduct">Create Product</a>
    </div>
</div>
<div class="row">
    <div class="col">
       @* ToDO <Client.Pages.ProductTable.ProductTable Products="@ProductsList"/>*@
    </div>
</div>
<div class="row">
    <div class="col">
        @*Place for pagination*@
    </div>
</div>

@code {
    public IEnumerable<Product> ProductsList { get; set; } = new List<Product>();

    public PaginationMetaData MetaData { get; set; } = new PaginationMetaData();

    private PaginationParameters paginationParameters = new PaginationParameters();

    protected async override Task OnInitializedAsync()
    {
        var paginatioList = await Repository.GetByFiltersAsync(paginationParameters);

        ProductsList = paginatioList.Entities;
        MetaData = paginatioList.MetaData;
    }
}
